/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package pt.ipleiria.tripPlanner.gui.cenario;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ListCellRenderer;
import pt.ipleiria.tripPlanner.gui.Models.Alojamento;
import pt.ipleiria.tripPlanner.gui.Models.CenarioAlojamento;
import pt.ipleiria.tripPlanner.gui.Models.DadosAplicacao;
import pt.ipleiria.tripPlanner.gui.Models.Etapa;
import pt.ipleiria.tripPlanner.gui.Models.Viagem;
import pt.ipleiria.tripPlanner.gui.Utils.CellRendererAlojamento;
import pt.ipleiria.tripPlanner.gui.events.OkInserirCenarioAlojamentoClicadoEvent;
import pt.ipleiria.tripPlanner.gui.events.OkInserirCenarioAlojamentoClicadoListener;

/**
 *
 * @author DELL
 */
public class CriarEditarCenarioAlojamento extends javax.swing.JPanel {

    private List<OkInserirCenarioAlojamentoClicadoListener> okInserirCenarioAlojamentoClicadoListener;
    private ArrayList<Alojamento> alojamentoModelList;
    private DefaultListModel<Alojamento> modelA;
    private ArrayList<Alojamento> reservasModelList;
    private Viagem viagem;
    private CenarioAlojamento cenarioAlojamento;
    private DefaultComboBoxModel<Etapa> comboModelEtapas;

    /**
     * Creates new form CriarCenarioAlojamento
     */
    public CriarEditarCenarioAlojamento() {
        initComponents();
        this.okInserirCenarioAlojamentoClicadoListener = new ArrayList<>();

        alojamentoModelList = new ArrayList<>();
        modelA = new DefaultListModel<>();

        reservasModelList = new ArrayList<>();
        modelA = new DefaultListModel<>();

        lstAlojamentos.setCellRenderer((ListCellRenderer) new CellRendererAlojamento());

        lblAviso.setVisible(false);
    }

    public synchronized void addOkInserirCenarioAlojamentoClicadoListener(OkInserirCenarioAlojamentoClicadoListener listener) {
        this.okInserirCenarioAlojamentoClicadoListener.add(listener);
    }

    public synchronized void removeOkInserirCenarioAlojamentoClicadoListener(OkInserirCenarioAlojamentoClicadoListener listener) {
        this.okInserirCenarioAlojamentoClicadoListener.remove(listener);
    }

    protected synchronized void fireOkInserirCenarioAlojamentoClicadoEvent() {
        for (OkInserirCenarioAlojamentoClicadoListener listener : this.okInserirCenarioAlojamentoClicadoListener) {
            OkInserirCenarioAlojamentoClicadoEvent evento = new OkInserirCenarioAlojamentoClicadoEvent(this);
            listener.okInserirCenarioAlojamentoClicado(evento);
        }
    }

//    public synchronized void addOkEditarCenarioAlojamentoClicadoListener(OkEditarCenarioAlojamentoClicadoListener listener) {
//        this.okEditarCenarioAlojamentoClicadoListener.add(listener);
//    }
//
//    public synchronized void removeOkEditarCenarioAlojamentoClicadoListener(OkEditarCenarioAlojamentoClicadoListener listener) {
//        this.okEditarCenarioAlojamentoClicadoListener.remove(listener);
//    }
//
//    protected synchronized void fireOkEditarCenarioAlojamentoClicadoEvent() {
//        for (OkEditarCenarioAlojamentoClicadoListener listener : this.okEditarCenarioAlojamentoClicadoListener) {
//            OkEditarCenarioAlojamentoClicadoEvent evento = new OkEditarCenarioAlojamentoClicadoEvent(this);
//            listener.okEditarCenarioAlojamentoClicado(evento);
//        }
//    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnOk = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        spParticipantes = new javax.swing.JScrollPane();
        lstAlojamentos = new javax.swing.JList();
        lblViagens = new javax.swing.JLabel();
        lblParticipantes = new javax.swing.JLabel();
        btnAssociarUm = new javax.swing.JButton();
        btnEliminarAssociacaoUm = new javax.swing.JButton();
        lblAviso = new javax.swing.JLabel();
        lblReservaEscolhida = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tfDesignacao = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();

        setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 2, 36)); // NOI18N
        jLabel1.setText("Criar/Editar Cenarios de Alojamento");

        btnCancelar.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnOk.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        btnOk.setText("Criar");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lstAlojamentos.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lstAlojamentos.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        spParticipantes.setViewportView(lstAlojamentos);

        lblViagens.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblViagens.setText("Reserva Escolhidas:");

        lblParticipantes.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        lblParticipantes.setText("Alojamentos");

        btnAssociarUm.setText(">");
        btnAssociarUm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAssociarUmActionPerformed(evt);
            }
        });

        btnEliminarAssociacaoUm.setText("<");
        btnEliminarAssociacaoUm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarAssociacaoUmActionPerformed(evt);
            }
        });

        lblAviso.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        lblAviso.setForeground(new java.awt.Color(255, 0, 0));
        lblAviso.setText("jLabel2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblParticipantes)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(spParticipantes, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnAssociarUm, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnEliminarAssociacaoUm, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(lblViagens, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(lblReservaEscolhida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(74, 74, 74)
                        .addComponent(lblAviso, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(42, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblParticipantes)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spParticipantes, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lblViagens)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGap(25, 25, 25)
                                    .addComponent(lblReservaEscolhida, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(btnAssociarUm)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEliminarAssociacaoUm)))))
                .addGap(0, 0, 0)
                .addComponent(lblAviso))
        );

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel2.setText("Designacao:");

        jLabel3.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel3.setText("Etapas:");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBox1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBox1ItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnOk)
                                .addGap(18, 18, 18)
                                .addComponent(btnCancelar))
                            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(93, 93, 93))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(83, 83, 83))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 557, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGap(144, 144, 144)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfDesignacao, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfDesignacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 21, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnOk))
                .addGap(43, 43, 43))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed

        if (tfDesignacao.getText().isEmpty()) {
            lblAviso.setText("Introduza uma designacao!");
            return;
        }

        if (cenarioAlojamento.getDesignacao().equals("")) {
//            for (CenarioAlojamento cenarioAlojamento : viagem.getCenariosAlojamento()) {
//                if (tfDesignacao.getText().equals(cenarioAlojamento.getDesignacao())) {
//                    lblAviso.setText("Designacao já existente!");
//                    return;
//                }
//            }
        }
        boolean reservado = false;
        for (Map.Entry<Etapa, Alojamento> entry : cenarioAlojamento.getMapaReservas().entrySet()) {
            if (entry.getKey() != null) {
                reservado = true;
                break;
            }
        }
        if (!reservado) {
            lblAviso.setText("Reserve pelo menos um alojamento");
            return;
        }

        if (cenarioAlojamento.getDesignacao().equals("")) {
            cenarioAlojamento.setDesignacao(tfDesignacao.getText());
            DadosAplicacao.getInstance().adicionarCenarioAlojamento(cenarioAlojamento);
            limparCampos();
            this.fireOkInserirCenarioAlojamentoClicadoEvent();
        } else {
            cenarioAlojamento.setDesignacao(tfDesignacao.getText());
            DadosAplicacao.getInstance().atualizarCenarioAlojamento(cenarioAlojamento);
            limparCampos();
            this.fireOkInserirCenarioAlojamentoClicadoEvent();
        }

    }//GEN-LAST:event_btnOkActionPerformed

    private void btnAssociarUmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAssociarUmActionPerformed
        if (lstAlojamentos.getSelectedValuesList().size() != 1) {
            lblAviso.setText("Apenas pode ter um alojamento selecionado");
        } else {
            Etapa etapaEscolhida = (Etapa) comboModelEtapas.getElementAt(jComboBox1.getSelectedIndex());

            Alojamento a = (Alojamento) lstAlojamentos.getSelectedValue();
            modelA.removeElement(a);
            lstAlojamentos.setModel(modelA);
            cenarioAlojamento.getMapaReservas().put(etapaEscolhida, a);
            lblReservaEscolhida.setText(a.getDesignacao());
        }
    }//GEN-LAST:event_btnAssociarUmActionPerformed

    private void btnEliminarAssociacaoUmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarAssociacaoUmActionPerformed
        Etapa etapaEscolhida = (Etapa) comboModelEtapas.getElementAt(jComboBox1.getSelectedIndex());
        if (!cenarioAlojamento.getMapaReservas().containsKey(etapaEscolhida) || cenarioAlojamento.getMapaReservas().get(etapaEscolhida) == null) {
            lblAviso.setText("Selecione apenas um alojamento");
        } else {
            Alojamento a = (Alojamento) lstAlojamentos.getSelectedValue();
            modelA.addElement(a);
            lstAlojamentos.setModel(modelA);
            cenarioAlojamento.getMapaReservas().put(etapaEscolhida, a);
            lblReservaEscolhida.setText("");

        }
    }//GEN-LAST:event_btnEliminarAssociacaoUmActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limparCampos();
        this.fireOkInserirCenarioAlojamentoClicadoEvent();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void jComboBox1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBox1ItemStateChanged
        DefaultListModel listModel = new DefaultListModel();
        Etapa etapaEscolhida = (Etapa) jComboBox1.getSelectedItem();
        if (!DadosAplicacao.getInstance().getAlojamentos().isEmpty()) {
            for (Alojamento alojamento : DadosAplicacao.getInstance().getAlojamentos()) {
                if (etapaEscolhida.getLocalidadeFinal().equals(alojamento.getLocalidade())) {
                    listModel.addElement(alojamento);
                }
            }
        }
    }//GEN-LAST:event_jComboBox1ItemStateChanged

    public void preencherCampos(CenarioAlojamento cenarioAlojamento) {
        if (cenarioAlojamento == null) {
            this.cenarioAlojamento = new CenarioAlojamento("", viagem, new HashMap<Etapa, Alojamento>());
            for (Etapa etapa : cenarioAlojamento.getViagem().getEtapas()) {
                comboModelEtapas.addElement(etapa);
                cenarioAlojamento.getMapaReservas().put(etapa, null);
            }
        } else {
            this.cenarioAlojamento = cenarioAlojamento;
            for (Etapa etapa : cenarioAlojamento.getViagem().getEtapas()) {
                comboModelEtapas.addElement(etapa);
            }
        }

        tfDesignacao.setText(cenarioAlojamento.getDesignacao());
        DefaultListModel<Alojamento> model = new DefaultListModel();
//        ArrayList<Alojamento> listaAlojamentos = cenarioAlojamento.getAlojamentos();
//        for (Alojamento alojamento : listaAlojamentos) {
//            model.addElement(alojamento);
//        }
    }

    public void setTitulo(String string) {
        jLabel1.setText(string);
    }

    public void limparCampos() {
        cenarioAlojamento = null;
        preencherCampos(cenarioAlojamento);
    }

    /* public void preencherDados(Viagem viagem) {

     this.viagem = viagem;

     comboModelEtapas = new DefaultComboBoxModel<>();

     for (Etapa etapa : viagem.getEtapas()) {
     comboModelEtapas.addElement(etapa);
     }
     jComboBox1.setModel(comboModelEtapas);

     DefaultListModel listModel = new DefaultListModel();
     Etapa etapaEscolhida = (Etapa) jComboBox1.getSelectedItem();
     for (Alojamento alojamento : etapaEscolhida.getReservas()) {
     listModel.addElement(alojamento);
     }

     }*/
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAssociarUm;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEliminarAssociacaoUm;
    private javax.swing.JButton btnOk;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAviso;
    private javax.swing.JLabel lblParticipantes;
    private javax.swing.JLabel lblReservaEscolhida;
    private javax.swing.JLabel lblViagens;
    private javax.swing.JList lstAlojamentos;
    private javax.swing.JScrollPane spParticipantes;
    private javax.swing.JTextField tfDesignacao;
    // End of variables declaration//GEN-END:variables

    private void preencherPainel(Viagem viagem) {

        this.viagem = viagem;

        comboModelEtapas = new DefaultComboBoxModel<>();

        for (Etapa etapa : viagem.getEtapas()) {
            comboModelEtapas.addElement(etapa);
        }
        jComboBox1.setModel(comboModelEtapas);

        jComboBox1.setSelectedIndex(0);

        DefaultListModel listModel = new DefaultListModel();
        Etapa etapaEscolhida = (Etapa) jComboBox1.getSelectedItem();
        if (!DadosAplicacao.getInstance().getAlojamentos().isEmpty()) {
            for (Alojamento alojamento : DadosAplicacao.getInstance().getAlojamentos()) {
                if (etapaEscolhida.getLocalidadeFinal().equals(alojamento.getLocalidade())) {
                    listModel.addElement(alojamento);
                }
            }
        }

        lstAlojamentos.setModel(listModel);

//        modelA = new DefaultListModel();
//        Etapa etapaEscolhida = (Etapa) comboModelEtapas.getElementAt(jComboBox1.getSelectedIndex());
//        for (Alojamento alojamento : etapaEscolhida.getReservas()) {
//            modelA.addElement(alojamento);
//        }
        Alojamento alojamento = cenarioAlojamento.getMapaReservas().get(etapaEscolhida);
        lblReservaEscolhida.setText(alojamento.getDesignacao());
        modelA.removeElement(alojamento);
        lstAlojamentos.setModel(modelA);
    }
}

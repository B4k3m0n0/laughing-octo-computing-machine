package pt.ipleiria.tripPlanner.gui.participantes;

import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import org.omg.PortableInterceptor.SYSTEM_EXCEPTION;
import pt.ipleiria.tripPlanner.gui.Models.DadosAplicacao;
import pt.ipleiria.tripPlanner.gui.Models.Participante;
import pt.ipleiria.tripPlanner.gui.events.ConfirmarClicadoEvent;
import pt.ipleiria.tripPlanner.gui.events.ConfirmarClicadoListener;

/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author Ricardo
 */
public class InserirEditarParticipante extends javax.swing.JPanel {

    private List<ConfirmarClicadoListener> confirmarClicadoListener;
//    private DefaultListModel<String> modelPermissoesUtilizador;
//    private DefaultListModel<String> modelPermissoes;
//    private ArrayList<String> permissoesUtilizador;
    private Participante participante;

    /**
     * Creates new form InserirParticipante
     */
    public InserirEditarParticipante() {
        initComponents();

        this.confirmarClicadoListener = new ArrayList<>();
//        this.modelPermissoesUtilizador = new DefaultListModel<>();
//        this.modelPermissoes = new DefaultListModel<String>();
//        modelPermissoes.addElement("Localidades");
//        modelPermissoes.addElement("Viagens");
//        modelPermissoes.addElement("Etapas");
//        modelPermissoes.addElement("Alojamentos");
//        modelPermissoes.addElement("Participantes");
//        permissoesUtilizador = new ArrayList<>();

//        lstPermissoes.setModel(modelPermissoes);

    }

    public synchronized void addConfirmarClicadoListener(ConfirmarClicadoListener listener) {
        this.confirmarClicadoListener.add(listener);
    }

    public synchronized void removeConfirmarClicadoListener(ConfirmarClicadoListener listener) {
        this.confirmarClicadoListener.remove(listener);
    }

    protected synchronized void fireConfirmarClicadoEvent() {
        for (ConfirmarClicadoListener listener : this.confirmarClicadoListener) {
            ConfirmarClicadoEvent evento = new ConfirmarClicadoEvent(this);
            listener.confirmarClicado(evento);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnOk = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        lblLocalidade = new javax.swing.JLabel();
        lblDataNascimento = new javax.swing.JLabel();
        lblBI = new javax.swing.JLabel();
        tfLocalidade = new javax.swing.JTextField();
        tfBilheteIdentidade = new javax.swing.JTextField();
        tfNome = new javax.swing.JTextField();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        lblNome = new javax.swing.JLabel();
        cbICF = new javax.swing.JComboBox();
        lblCondicaoFisica = new javax.swing.JLabel();
        lblErros1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cbAdministrador = new javax.swing.JCheckBox();
        panelAdmin = new javax.swing.JPanel();
        pfPassword = new javax.swing.JPasswordField();
        lblPassword = new javax.swing.JLabel();
        tfUsername = new javax.swing.JTextField();
        lblUsername = new javax.swing.JLabel();
        lblAdminErro = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jSeparator2 = new javax.swing.JSeparator();

        setBackground(new java.awt.Color(255, 255, 255));

        btnOk.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnOk.setText("Criar");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnCancelar.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 2, 36)); // NOI18N
        jLabel2.setText("Inserir/Editar Participantes");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Dados Pessoais"));

        lblLocalidade.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblLocalidade.setText("*Localidade:");

        lblDataNascimento.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblDataNascimento.setText("*Data de Nascimento:");

        lblBI.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblBI.setText("*Bilhete Identidade:");

        lblNome.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblNome.setText("*Nome:");

        cbICF.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Condição física...", "1", "2", "3", "4", "5" }));

        lblCondicaoFisica.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblCondicaoFisica.setText("*Indice Condicao Fisica:");

        lblErros1.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblLocalidade)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfLocalidade))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblDataNascimento)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jDateChooser2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblBI)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tfBilheteIdentidade, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(lblCondicaoFisica)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbICF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(14, 14, 14))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblNome)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lblErros1, javax.swing.GroupLayout.PREFERRED_SIZE, 254, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome)
                    .addComponent(tfNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblDataNascimento)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBI)
                    .addComponent(tfBilheteIdentidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblLocalidade)
                    .addComponent(tfLocalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblCondicaoFisica)
                    .addComponent(cbICF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addComponent(lblErros1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Permissões"));

        cbAdministrador.setBackground(new java.awt.Color(255, 255, 255));
        cbAdministrador.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        cbAdministrador.setText("Administrador");
        cbAdministrador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAdministradorActionPerformed(evt);
            }
        });

        panelAdmin.setBackground(new java.awt.Color(255, 255, 255));
        panelAdmin.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        panelAdmin.setEnabled(false);

        pfPassword.setEnabled(false);

        lblPassword.setText("Password:");
        lblPassword.setEnabled(false);

        tfUsername.setEnabled(false);

        lblUsername.setText("Username:");
        lblUsername.setEnabled(false);

        javax.swing.GroupLayout panelAdminLayout = new javax.swing.GroupLayout(panelAdmin);
        panelAdmin.setLayout(panelAdminLayout);
        panelAdminLayout.setHorizontalGroup(
            panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblUsername)
                    .addComponent(lblPassword))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pfPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 243, Short.MAX_VALUE)
                    .addComponent(tfUsername))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelAdminLayout.setVerticalGroup(
            panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAdminLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUsername)
                    .addComponent(tfUsername, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAdminLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pfPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblPassword))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbAdministrador)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(lblAdminErro, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 77, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(panelAdmin, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbAdministrador)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelAdmin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblAdminErro, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(232, 232, 232))
        );

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(42, 42, 42)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOk)
                        .addGap(18, 18, 18)
                        .addComponent(btnCancelar)))
                .addGap(35, 35, 35))
            .addGroup(layout.createSequentialGroup()
                .addGap(195, 195, 195)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 323, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(3, 3, 3)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnCancelar)
                                .addComponent(btnOk)))
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(175, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed


        if (tfNome.getText().isEmpty()) {
            lblErros1.setText("Introduza um nome!");
            return;
        }

        if (jDateChooser2 == null) {
            lblErros1.setText("Introduza uma Data de Nascimento!");
            return;
        }

        if (tfBilheteIdentidade.getText().isEmpty()) {
            lblErros1.setText("Introduza um BI!");
            return;
        } else {
            if (tfBilheteIdentidade.getText().length() != 8) {
                lblErros1.setText("BI inválido!");
                return;
            }
        }

        if (participante == null) {
            for (Participante participante : DadosAplicacao.getInstance().getParticipantes()) {
                if (tfBilheteIdentidade.getText().equals(participante.getBI() + "")) {
                    lblErros1.setText("BI já existente!");
                    return;
                }
            }
        }

        if (tfLocalidade.getText().isEmpty()) {
            lblErros1.setText("Insira uma Localidade!");
            return;
        }

        if (cbICF.getSelectedIndex() < 1) {
            lblErros1.setText("Escolha um ICF");
            return;
        }

        if (cbAdministrador.isSelected()) {
            if (tfUsername.getText().isEmpty()) {
                lblAdminErro.setText("Introduza um username!");
                return;
            }

            for (Participante participante : DadosAplicacao.getInstance().getParticipantes()) {
                if (tfUsername.getText().equals(participante.getUsername())) {
                    lblAdminErro.setText("Já existe um participante com o Username introduzido!");
                    return;
                }
            }


            if (pfPassword.getPassword() == null) {
                lblAdminErro.setText("Introduza uma password!");
                return;
            }
        }

        //boolean editor = false;

//        if (cbEditor.isSelected()) {
//            if (lstPermissoesUtilizador.getModel().getSize() < 0) {
//                lblEditorErro.setText("Escolha pelo menos uma permissão de editor!");
//                return;
//            }
//            editor = true;
//        }
        SimpleDateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
        String dataNasc = formatter.format(jDateChooser2.getCalendar().getTime());

        Participante part;

//        for (int i = 0; i < lstPermissoesUtilizador.getModel().getSize(); i++) {
//            String permissaoUtilizador = (String) lstPermissoesUtilizador.getModel().getElementAt(i);
//            permissoesUtilizador.add(permissaoUtilizador);
//        }

        if (cbAdministrador.isSelected()) {
            part = new Participante(tfNome.getText(), jDateChooser2.getCalendar(), Integer.parseInt(tfBilheteIdentidade.getText()), tfLocalidade.getText(), Integer.parseInt(cbICF.getModel().getElementAt(cbICF.getSelectedIndex()).toString()), true, tfUsername.getText(), pfPassword.getPassword(), false);
        } else {
            part = new Participante(tfNome.getText(), jDateChooser2.getCalendar(), Integer.parseInt(tfBilheteIdentidade.getText()), tfLocalidade.getText(), Integer.parseInt(cbICF.getModel().getElementAt(cbICF.getSelectedIndex()).toString()), false, tfBilheteIdentidade.getText(), dataNasc.toCharArray(), true);
        }

        if (participante == null) {
            DadosAplicacao.getInstance().adicionarParticipante(part);
            JOptionPane.showMessageDialog(this, "Utilizador Inserido!");
        } else {
            DadosAplicacao.getInstance().atualizarParticipante(part);
            JOptionPane.showMessageDialog(this, "Utilizador Alterado!");
        }


        panelAdmin.setEnabled(false);
        lblPassword.setEnabled(false);
        lblUsername.setEnabled(false);
        tfUsername.setEnabled(false);
        pfPassword.setEnabled(false);

        this.fireConfirmarClicadoEvent();


    }//GEN-LAST:event_btnOkActionPerformed

    private void cbAdministradorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAdministradorActionPerformed
        panelAdmin.setEnabled(cbAdministrador.isEnabled());
        lblPassword.setEnabled(cbAdministrador.isEnabled());
        lblUsername.setEnabled(cbAdministrador.isEnabled());
        tfUsername.setEnabled(cbAdministrador.isEnabled());
        pfPassword.setEnabled(cbAdministrador.isEnabled());
//        cbEditor.setEnabled(false);
        if (!cbAdministrador.isSelected()) {
            tfUsername.setText("");
            pfPassword.setText("");
            panelAdmin.setEnabled(false);
            lblPassword.setEnabled(false);
            lblUsername.setEnabled(false);
            tfUsername.setEnabled(false);
            pfPassword.setEnabled(false);
//            cbEditor.setEnabled(true);
        }

    }//GEN-LAST:event_cbAdministradorActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        limparCampos();
        this.fireConfirmarClicadoEvent();

    }//GEN-LAST:event_btnCancelarActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnOk;
    private javax.swing.JCheckBox cbAdministrador;
    private javax.swing.JComboBox cbICF;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblAdminErro;
    private javax.swing.JLabel lblBI;
    private javax.swing.JLabel lblCondicaoFisica;
    private javax.swing.JLabel lblDataNascimento;
    private javax.swing.JLabel lblErros1;
    private javax.swing.JLabel lblLocalidade;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblPassword;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JPanel panelAdmin;
    private javax.swing.JPasswordField pfPassword;
    private javax.swing.JTextField tfBilheteIdentidade;
    private javax.swing.JTextField tfLocalidade;
    private javax.swing.JTextField tfNome;
    private javax.swing.JTextField tfUsername;
    // End of variables declaration//GEN-END:variables

    public void setTitulo(String string) {
        jLabel2.setText(string);
    }

    private void preencherCampos(Participante participante) {
        tfBilheteIdentidade.setText(participante.getBI() + "");
        tfLocalidade.setText(participante.getLocalidade());
        tfNome.setText(participante.getNome());
        cbICF.setSelectedIndex(participante.getICF());
        if (participante.isAdministrador()) {
            cbAdministrador.setSelected(true);
            tfUsername.setText(participante.getUsername());
            pfPassword.setText(participante.getPassword().toString());
            panelAdmin.setEnabled(true);
            lblPassword.setEnabled(true);
            lblUsername.setEnabled(true);
            tfUsername.setEnabled(true);
            pfPassword.setEnabled(true);
//            cbEditor.setEnabled(false);
        } else {
            panelAdmin.setEnabled(false);
            lblPassword.setEnabled(false);
            lblUsername.setEnabled(false);
            tfUsername.setEnabled(false);
            pfPassword.setEnabled(false);
        }

//        if (participante.isEditor()) {
//            if (participante.getPermissoes() != null) {
//                for (String string : participante.getPermissoes()) {
//                    modelPermissoesUtilizador.addElement(string);
//                }
//                lstPermissoesUtilizador.setModel(modelPermissoesUtilizador);
//            }
//        }

        jDateChooser2.setCalendar(participante.getDataNasc());

    }

    public void limparCampos() {
        tfBilheteIdentidade.setText("");
        tfLocalidade.setText("");
        tfNome.setText("");
        tfUsername.setText("");
        cbICF.setSelectedIndex(0);
        //lstPermissoes.removeAll();
        pfPassword.setText("");
        jDateChooser2.setCalendar(null);
        lblErros1.setText("");
        cbAdministrador.setSelected(false);
        //cbEditor.setSelected(false);
        panelAdmin.setEnabled(false);
        lblPassword.setEnabled(false);
        lblUsername.setEnabled(false);
        tfUsername.setEnabled(false);
        pfPassword.setEnabled(false);
    }

    public void setParticipante(Participante participante) {
        this.participante = participante;
        btnOk.setText("Criar");
        tfBilheteIdentidade.setEnabled(true);
        if (participante != null) {
            preencherCampos(participante);
            btnOk.setText("Editar");
            tfBilheteIdentidade.setEnabled(false);
        }
    }
}
